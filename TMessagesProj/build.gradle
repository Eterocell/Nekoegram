import org.eclipse.jgit.internal.storage.file.FileRepository
import org.gradle.internal.os.OperatingSystem
import java.nio.file.Paths

plugins {
    id 'com.android.library'
}

configurations.all {
    exclude group: 'com.google.firebase', module: 'firebase-core'
    exclude group: 'androidx.recyclerview', module: 'recyclerview'
}

dependencies {
    implementation 'androidx.core:core:1.9.0'
    implementation 'androidx.palette:palette:1.0.0'
    implementation 'androidx.exifinterface:exifinterface:1.3.6'
    implementation 'androidx.dynamicanimation:dynamicanimation:1.0.0'
    implementation "androidx.sharetarget:sharetarget:1.2.0"

    compileOnly 'org.checkerframework:checker-qual:3.31.0'
    compileOnly 'org.checkerframework:checker-compat-qual:2.5.5'
    implementation 'com.google.firebase:firebase-messaging:23.1.1'
    implementation 'com.google.firebase:firebase-appindexing:20.0.0'
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    implementation 'com.google.android.gms:play-services-auth:20.4.1'
    implementation 'com.google.android.gms:play-services-vision:20.1.3'
    implementation 'com.google.android.gms:play-services-wearable:18.0.0'
    implementation 'com.google.android.gms:play-services-location:21.0.1'
    implementation 'com.googlecode.mp4parser:isoparser:1.1.22'
    implementation 'com.stripe:stripe-android:2.1.0'
    implementation 'com.google.mlkit:language-id:17.0.4'
    implementation 'com.android.billingclient:billing:5.1.0'

    implementation 'androidx.browser:browser:1.5.0'
    implementation 'app.nekogram.prism4j:prism4j:2.1.0'
    implementation 'app.nekogram.tcp2ws:tcp2ws:1.2.1'
    implementation 'app.nekogram.translator:translator:1.1.0'
    implementation 'com.getkeepsafe.relinker:relinker:1.4.5'
    implementation 'com.jaredrummler:truetypeparser-light:1.0.0'
    implementation 'org.lsposed.hiddenapibypass:hiddenapibypass:4.3'

    def appCenterSdkVersion = '5.0.0'
    implementation "com.microsoft.appcenter:appcenter-analytics:${appCenterSdkVersion}"
    implementation "com.microsoft.appcenter:appcenter-crashes:${appCenterSdkVersion}"
}

def refId = new FileRepository(rootProject.file(".git")).getRefDatabase().exactRef("HEAD").getObjectId().name()

android {
    namespace 'org.telegram.messenger'

    sourceSets.main.jniLibs.srcDirs = ['./jni/']

    buildFeatures {
        prefab true
    }

    externalNativeBuild {
        cmake {
            path 'jni/CMakeLists.txt'
        }
    }

    buildTypes {
        debug {
            buildConfigField("String", "COMMIT_ID", "\"${refId}\"")
            buildConfigField("long", "VERSION_CODE", "${APP_VERSION_CODE}")
            buildConfigField("String","VERSION_NAME","\"${APP_VERSION_NAME}\"")
        }

        release {
            buildConfigField("String", "COMMIT_ID", "\"${refId}\"")
            buildConfigField("long", "VERSION_CODE", "${APP_VERSION_CODE}")
            buildConfigField("String","VERSION_NAME","\"${APP_VERSION_NAME}\"")
        }
    }

    defaultConfig {
        externalNativeBuild {
            cmake {
                version '3.10.2'
                arguments '-DANDROID_STL=c++_static', '-DANDROID_PLATFORM=android-21'
                System.getenv("PATH").split(File.pathSeparator).any { path ->
                    var file = Paths.get("${path}${File.separator}ccache${if (OperatingSystem.current().windows) ".exe" else ""}").toFile()
                    if (file.exists()) {
                        println("Using ccache ${file.getAbsolutePath()}")
                        arguments += "-DANDROID_CCACHE=${file.getAbsolutePath()}"
                        return true
                    }
                }
            }
            ndk {
                abiFilters 'arm64-v8a'
            }
        }
    }
}